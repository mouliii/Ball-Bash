[gd_scene load_steps=10 format=2]

[ext_resource path="res://levels/Mods/Wall.gd" type="Script" id=1]

[sub_resource type="Shader" id=14]
code = "// NOTE: Shader automatically converted from Godot Engine 3.4.2.stable's SpatialMaterial.

shader_type spatial;
render_mode blend_add,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx,unshaded;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;
uniform sampler2D noiseTexture;
uniform sampler2D gradientTexture;

void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}

void fragment() {
	vec2 base_uv = UV;
	vec4 noise_tex = texture(noiseTexture, base_uv + vec2(-TIME, TIME)) * texture(gradientTexture, vec2(UV.y, UV.x));
	vec4 gradient_tex = texture(gradientTexture, vec2(UV.y, UV.x));
	//noise_tex *= gradient_tex;
	ALBEDO =  noise_tex.rgb;
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
	ALPHA = noise_tex.a;
}
"

[sub_resource type="Gradient" id=15]
offsets = PoolRealArray( 0, 0.417178, 0.993865 )
colors = PoolColorArray( 1, 0.999023, 0, 1, 0.579102, 1, 0, 1, 1, 0.949219, 0, 1 )

[sub_resource type="GradientTexture" id=16]
gradient = SubResource( 15 )

[sub_resource type="OpenSimplexNoise" id=17]

[sub_resource type="NoiseTexture" id=18]
seamless = true
noise = SubResource( 17 )

[sub_resource type="ShaderMaterial" id=19]
shader = SubResource( 14 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.0
shader_param/roughness = 1.0
shader_param/point_size = 1.0
shader_param/uv1_scale = Vector3( 60, 0.485, 30 )
shader_param/uv1_offset = Vector3( 0, 0.294, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )
shader_param/noiseTexture = SubResource( 18 )
shader_param/gradientTexture = SubResource( 16 )

[sub_resource type="CubeMesh" id=20]
material = SubResource( 19 )
size = Vector3( 8, 0.2, 0.05 )

[sub_resource type="ConcavePolygonShape" id=21]
data = PoolVector3Array( -4, 0.1, 0.025, 4, 0.1, 0.025, -4, -0.1, 0.025, 4, 0.1, 0.025, 4, -0.1, 0.025, -4, -0.1, 0.025, 4, 0.1, -0.025, -4, 0.1, -0.025, 4, -0.1, -0.025, -4, 0.1, -0.025, -4, -0.1, -0.025, 4, -0.1, -0.025, 4, 0.1, 0.025, 4, 0.1, -0.025, 4, -0.1, 0.025, 4, 0.1, -0.025, 4, -0.1, -0.025, 4, -0.1, 0.025, -4, 0.1, -0.025, -4, 0.1, 0.025, -4, -0.1, -0.025, -4, 0.1, 0.025, -4, -0.1, 0.025, -4, -0.1, -0.025, 4, 0.1, 0.025, -4, 0.1, 0.025, 4, 0.1, -0.025, -4, 0.1, 0.025, -4, 0.1, -0.025, 4, 0.1, -0.025, -4, -0.1, 0.025, 4, -0.1, 0.025, -4, -0.1, -0.025, 4, -0.1, 0.025, 4, -0.1, -0.025, -4, -0.1, -0.025 )

[node name="Wall" type="Spatial"]
script = ExtResource( 1 )

[node name="MeshInstance" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.108, 0 )
mesh = SubResource( 20 )
material/0 = null

[node name="StaticBody" type="StaticBody" parent="MeshInstance"]
collision_mask = 4

[node name="CollisionShape" type="CollisionShape" parent="MeshInstance/StaticBody"]
shape = SubResource( 21 )

[node name="SpawnTimer" type="Timer" parent="."]
one_shot = true

[node name="DurationTimer" type="Timer" parent="."]
one_shot = true

[connection signal="timeout" from="SpawnTimer" to="." method="_on_SpawnTimer_timeout"]
[connection signal="timeout" from="DurationTimer" to="." method="_on_DurationTimer_timeout"]
